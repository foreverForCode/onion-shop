{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 这是洋葱商城的个人文档,用于记录各种常用配置和方法 @jordan, powered by GitbookThe document reversion time: 2020-06-16 18:22:48 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"configs/config.html":{"url":"configs/config.html","title":"常用字段","keywords":"","body":"常用配置 常用颜色 主颜色： #B800E1 常用字段 memberType 2 -> 服务商 3 -> 店主 4 -> 会员 olabelType 1 -> 荣誉会员 2 -> 进取会员 @jordan, powered by GitbookThe document reversion time: 2020-05-01 10:24:01 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"methods/method.html":{"url":"methods/method.html","title":"常用方法","keywords":"","body":"常用方法 jems.transformLink 转化 == content == 为链接 jems.transformLink = function(content){ var reg = /==(\\S*)==/g; var originData = content.match(reg); if(!originData){ originData = []; } var linkData = originData.map(function(item){ return item.replace(/==/g, ''); }) return { originData: originData, linkData : linkData } } jems.debounce 函数防抖，保证在防抖期间，目标函数只执行一次 jems.debounce = function(fn, await){ var timer = null; return function(){ var _this = this; var _arguments = arguments; clearTimeout(timer); timer = setTimeout(function(){ fn.apply(_this, _arguments); }, await) } } @jordan, powered by GitbookThe document reversion time: 2020-06-16 18:22:30 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"templates/template.html":{"url":"templates/template.html","title":"常用模板","keywords":"","body":"常用模板 HTML模板 洋葱OMALL 发票管理 @jordan, powered by GitbookThe document reversion time: 2020-06-05 13:49:26 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"modules/module.html":{"url":"modules/module.html","title":"常用模块","keywords":"","body":"常用模块 此文件夹用于记录常用的模板，便于代码复用和优化 @jordan, powered by GitbookThe document reversion time: 2020-04-24 16:09:24 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"modules/pop.html":{"url":"modules/pop.html","title":"弹框","keywords":"","body":"弹框 实例代码 var content = 'hello world'; var idx = mBox.open({ width : \"80%\", title :['温馨提示','color:#333;font-size:16px;text-align:center;font-weight:500'], content : ''+content+'', closeBtn: [false], btnName : ['同意并继续','不同意',], maskClose : false, btnStyle:[\"color:#B800E1\"], yesfun : function () { _this.signAgree(idx); }, nofun:function () { jems.goUrl('/wx/index.html'); } }) 不同形态的弹框 var Waits = mBox.open({ boxtype: 3, conStyle: 'text-align:center;', maskColor: \"rgba(0,0,0,0.3)\", time: 0, content: '努力提交订单中（5s）', success: function () { }}) @jordan, powered by GitbookThe document reversion time: 2020-04-29 14:02:29 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"modules/copy.html":{"url":"modules/copy.html","title":"复制","keywords":"","body":"复制 实例代码 var clipboard = null; var status = 'init'; // init -> active jems.copy = function(){ status = 'active'; if(!clipboard){ clipboard = new ClipboardJS('.clipboard', { target: function () { return $('#clipboardText')[0]; } }); } clipboard.on('success', function (e) { if(status == 'active'){ jems.tipMsg('复制成功'); status = 'init'; } }); clipboard.on('error', function (e) { if(status == 'active'){ jems.tipMsg('复制失败'); status = 'init'; } }); } 发票单号： 复制 @jordan, powered by GitbookThe document reversion time: 2020-07-09 15:34:20 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"modules/神策.html":{"url":"modules/神策.html","title":"神策API","keywords":"","body":"神策数据-H5端技术文档 神策分析简介 神策分析，是针对企业级客户推出的深度用户行为分析产品，支持私有化部署，客户端、服务器、业务数据、第三方数据的全端采集和建模，驱动营销渠道效果评估、用户精细化运营改进、产品功能及用户体验优化、老板看板辅助管理决策、产品个性化推荐改造、用户标签体系构建等应用场景。作为 PaaS 平台支持二次开发，可通过 BI、大数据平台、CRM、ERP 等内部 IT 系统，构建用户数据体系，让用户行为数据发挥深远的价值。 web端如何接入 引入相关的js sensorsdata.min.js heatmap.min.js 加载SDK 全局封装的函数存放在common.js和common-vue.js (function(para) { var p = para.sdk_url, n = para.name, w = window, d = document, s = 'script',x = null,y = null; if(typeof(w['sensorsDataAnalytic201505']) !== 'undefined') { return false; } w['sensorsDataAnalytic201505'] = n; w[n] = w[n] || function(a) {return function() {(w[n]._q = w[n]._q || []).push([a, arguments]);}}; var ifs = ['track','quick','register','registerPage','registerOnce','trackSignup', 'trackAbtest', 'setProfile','setOnceProfile','appendProfile', 'incrementProfile', 'deleteProfile', 'unsetProfile', 'identify','login','logout','trackLink','clearAllRegister','getAppStatus']; for (var i = 0; i 接入字段解释 sdk_url 这是神策SDK核心库，需要在页面加载完加载 headmap 这是神策热力图核心库，需要在页面加载完加载 name 神策全局命名 server_url 数据接收地址，用于接收用户行为数据 全局封装函数说明 所有的API都是异步操作，需要使用回调 Robot 神策数据收集全局命名空间，神策相关的API都存放在它下面 Robot.debounce 功能：函数防抖，在规定时间内多次触发只会执行一次，默认1s 参数 说明 默认值 fn 延迟执行函数 null wait 延迟时间 1s 使用方法： Robot.debounce(function(){ }, 1000) Robot.onload 功能：监听神策SDK加载成功，这是后面数据操作的基础 参数 说明 默认值 callback 加载成功的回调 null 使用方法： Robot.onload(function(){ }) Robot.getAnonymousID 功能：获取神策SDK生成的匿名ID，主要由cookieID实现，关于匿名ID的具体信息) 使用方法： Robot.getAnonymousID(function(anonymousID){ }) Robot.login 功能：神策登录，需要把匿名ID和用户ID合并，生成一个唯一识别ID 参数 说明 默认值 memberId 用户登录成功后获取 '' 使用方法： Robot.login(memberId) Robot.setPublicAttribute 功能：设置Event公共属性 事件表的公共属性不会被覆盖，类似如日志 参数 说明 默认值 dict 自定义的公共属性 {} 使用方法： Robot.setPublicAttribute({'current_url':location.href}) Robot.setProfile 由于用户唯一，用户属性可以被覆盖 功能：设置用户属性 参数 说明 默认值 dict 自定义属性 {} callback 设置成功的回调 fn 使用方法： Robot.setProfile({'url':'baidu.com'}, function(){ }) Robot.setOnceProfile 功能：设置用户属性-没有就加上， 已存在就不加 参数 说明 默认值 dict 自定义属性 {} callback 设置成功的回调 fn 使用方法： Robot.setOnceProfile({'url':'baidu.com'}, function(){ }) Robot.incrementProfile 功能：增加用户属性 参数 说明 默认值 dict 自定义属性 {} callback 设置成功的回调 fn 使用方法： Robot.incrementProfile({'url':'baidu.com'}, function(){ }) Robot.deleteProfile 功能：删除所有的用户属性，慎用 参数 说明 默认值 callback 删除成功的回调 fn 使用方法： Robot.deleteProfile(function(){ }) Robot.unsetProfile 功能：删除用户属性 参数 说明 默认值 arr 已有属性 [] callback 删除成功的回调 fn 使用方法： Robot.unsetProfile(['url'], function(){ }) Robot.trigger trigger已经调用了onload事件，保证手动埋点事件触发 功能：手动埋点 参数 说明 默认值 event 事件名 '' params 事件传递参数 {} callback 事件传递成功回调 fn Robot.trigger('login',{}, function(){ }) Robot.batchTrigger trigger事件做了防抖处理，没办法批量触发事件 功能：批量触发事件 参数 说明 默认值 event 事件名 '' params 事件传递参数 {} callback 事件传递成功回调 fn Robot.batchTrigger('login',{}, function(){ }) 自定义事件loadFinish 由于使用了模板引擎，初始化的时候，页面是没有数据的，需要等待接口返回数据，再结合模板引擎才生成页面 自定义事件放在模板引擎解析完，并再等2s触发，保证页面加载完数据。已经放在源码中，不需要手动操作 @jordan, powered by GitbookThe document reversion time: 2020-07-09 15:35:21 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"}}